ARG VARIANT

FROM mcr.microsoft.com/vscode/devcontainers/base:0-${VARIANT}

ARG USERNAME=vscode
ARG NODE_VERSION
ARG RUBY_VERSION
ARG USER_UID
ARG USER_GID

# Update args in docker-compose.yaml to set the UID/GID of the "vscode" user.
RUN if [ "$USER_GID" != "1000" ] || [ "$USER_UID" != "1000" ]; then \
        groupmod --gid $USER_GID $USERNAME \
        && usermod --uid $USER_UID --gid $USER_GID $USERNAME \
        && chown -R $USER_UID:$USER_GID /home/$USERNAME; \
    fi

# Grant vscode user passwordless sudo access
RUN apt-get install -y sudo \
    && echo $USERNAME ALL=\(ALL\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
&& apt-get -y install --no-install-recommends \
build-essential \
libssl-dev \
zlib1g-dev \
gnupg2 \
tar \
tzdata \
postgresql-client \
libpq-dev \
yarn \
git \
imagemagick \
tmux \
zsh \
git-flow \
npm \
libyaml-dev \
curl

# Install overmind
RUN curl -L https://github.com/DarthSim/overmind/releases/download/v2.1.0/overmind-v2.1.0-linux-amd64.gz > overmind.gz \
  && gunzip overmind.gz \
  && sudo mv overmind /usr/local/bin \
  && chmod +x /usr/local/bin/overmind

# Install gh
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
   && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
   && sudo apt update \
   && sudo apt install gh

# Install Ruby using RVM (Ruby Version Manager)
RUN curl -sSL https://rvm.io/mpapis.asc | gpg --import - && \
    curl -sSL https://rvm.io/pkuczynski.asc | gpg --import - && \
    curl -sSL https://get.rvm.io | bash -s stable && \
    echo 'source /etc/profile.d/rvm.sh' >> /etc/bash.bashrc && \
    echo 'source "/etc/profile.d/rvm.sh"' >> ~/.zshrc && \
    usermod -a -G rvm vscode
    
# Do the setup required for chatwoot app
WORKDIR /workspace
COPY . /workspace

USER vscode

# Install Ruby
RUN sudo -E bash -c "source /etc/profile.d/rvm.sh && rvm install ruby $RUBY_VERSION" \
    && sudo -E bash -c "source /etc/profile.d/rvm.sh && rvm use $RUBY_VERSION --default" \
    && sudo -E bash -c "source /etc/profile.d/rvm.sh && rvm list default"

# Set up Ruby
COPY Gemfile Gemfile.lock ./
RUN bash -c "source /etc/profile.d/rvm.sh && gem install bundler"
RUN bash -c "source /etc/profile.d/rvm.sh && bundle install"

# Set up Node.js and yarn as root
USER root
RUN npm install n -g
RUN n $NODE_VERSION
RUN npm install --global yarn

# Switch back to vscode user
USER vscode
RUN yarn
